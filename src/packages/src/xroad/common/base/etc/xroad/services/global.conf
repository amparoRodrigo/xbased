#!/bin/bash

# Please do not change this file! It will be overwritten by updates.
# System specific changes should be added to /etc/xroad/services/local.properties

ADDON_PATH="/usr/share/xroad/jlib/addon"

umask 0027

if [ -f /var/run/xroad/xroad-grpc-internal-env.properties ]; then
  set -a
  . /var/run/xroad/xroad-grpc-internal-env.properties
  set +a
fi

export LD_LIBRARY_PATH="/usr/share/xroad/lib:$LD_LIBRARY_PATH"

function to_megabytes() {
    if [[ "$2" == "g" || "$2" == "G" ]]; then
        echo "$1*1024" | bc
    else
        echo "$1"
    fi
}

function find_xm() {
    pattern="-Xm$1([0-9]+)(m|g)"

    text="$2"
    if [[ $text =~ $pattern ]]; then
        to_megabytes ${BASH_REMATCH[1]} ${BASH_REMATCH[2]}
    else
        echo "0"
    fi
}

function calc_percentile() {
    if [ "$1" -gt "1000" ]; then
        echo "First argument must be less than or equal to 1000"
        exit 1
    fi
    echo $2*$1/1000 | bc
}

function get_total_memory() {
    local total_memory=""

    if [ -f /sys/fs/cgroup/memory.max ]; then
        # cgroup v2
        memory_limit=$(cat /sys/fs/cgroup/memory.max)
    elif [ -f /sys/fs/cgroup/memory/memory.limit_in_bytes ]; then
        # cgroup v1
        memory_limit=$(cat /sys/fs/cgroup/memory/memory.limit_in_bytes)
    fi

    if [[ -z "$memory_limit" || "$memory_limit" == "max" ]]; then
        total_memory=$(free --mega | awk '/Mem:/ {print $2}')
    else
        total_memory=$(($memory_limit / 1024 / 1024))
    fi

    echo "$total_memory"
}

#Calculates memory based on total memory and given percentiles
#Arguments:
#1. Total memory
#2. Minimum allowed memory in megabytes
#3. Maximum allowed memory in megabytes
#4. global array variable: memory_config. Percentiles list for getting memory based on total memory.
#For example: ("4000:125" "8000:500") means if total memory is less than 4000 then result is 1/8 of total memory, if less than 8000 then half of total memory.
#should be listed in ascending order based on total memory part.
memory_config=()
calc_xm() {
    local -r total_mem="$1"
    local -r min_val=$2
    local -r max_val="$3"

    local result="$max_val"

    for pair in "${memory_config[@]}"; do

        IFS=':' read -ra config <<< "$pair"
        if [[ "$total_mem" -le "${config[0]}" ]]; then
            result="$(calc_percentile ${config[1]} $total_mem)"
            break
        fi
    done

    if [[ "$result" -gt "$max_val" ]]; then
        result="$max_val"
    fi

    if [[ "$result" -lt "$min_val" ]]; then
        result="$min_val"
    fi

    echo "$result"
}

build_xm_args() {
    local -r params_line="$1"

    local -r current_xms=$(find_xm s "$params_line")
    local -r current_xmx=$(find_xm x "$params_line")

    local mem_params=" "
    local total_mem=$(get_total_memory)

    if [[ "$current_xms" -eq "0" ]]; then
        memory_config=("${xms_cfg[@]}")
        mem_params="$mem_params -Xms$(calc_xm $total_mem $xms_min $xms_max)m "
    fi

    if [[ "$current_xmx" -eq "0" ]]; then
        memory_config=("${xmx_cfg[@]}")
        mem_params="$mem_params -Xmx$(calc_xm $total_mem $xmx_min $xmx_max)m"
    fi

    echo "$mem_params"
}

load_from_properties () {
  if [ -f /etc/xroad/services/local.properties ]; then
    while IFS='=' read -r key value
    do
      if [ -n "$key" ] && [ -n "$value" ] && [[ $key != \#* ]]; then
        case $key in
          XROAD_* )
            printf -v "${key}" '%s' "${value}"
            ;;
          *)
            #ignored
            echo "WARNING: overriding $key ignored" >&2
            ;;
        esac
      fi
    done < /etc/xroad/services/local.properties
  fi
}

# Applies modifications by local.conf, supporting legacy variables without XROAD_ prefix.
# Expects global variable name as an argument, e.g.
#   apply_local_conf XROAD_PROXY_PARAMS
apply_local_conf() {
  if [ -f /etc/xroad/services/local.conf ]; then
    local -r param_name="$1"
    local -r legacy_param_name="${param_name##XROAD_}"
    local -r default_params="${!param_name}"
    local -r default_addon_params="${XROAD_ADDON_PARAMS}"
    local ADDON_PARAMS="$XROAD_ADDON_PARAMS"
    local "$legacy_param_name"="$default_params"

    source /etc/xroad/services/local.conf

    if [[ "$default_params" != "${!legacy_param_name}" && "$default_params" == "${!param_name}" ]]; then
      declare -g "$param_name"="${!legacy_param_name}"
    fi

    if [[ "$default_addon_params" != "$ADDON_PARAMS" && "$default_addon_params" == "$XROAD_ADDON_PARAMS" ]]; then
      XROAD_ADDON_PARAMS="$ADDON_PARAMS"
    fi
  fi

  if [[ -n $JAVA_HOME ]]; then
    PATH="$JAVA_HOME/bin:$PATH"
    export JAVA_HOME
  fi
}

load_from_properties

XROAD_PARAMS="-XX:+UseG1GC -Dfile.encoding=UTF-8 -Xshare:auto -Djdk.tls.ephemeralDHKeySize=2048 \
-Djavax.xml.accessExternalDTD=\"\" -Djavax.xml.accessExternalStylesheet=\"\" $XROAD_PARAMS"
